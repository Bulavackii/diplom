<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Значения по умолчанию для аутентификации
    |--------------------------------------------------------------------------
    |
    | Этот параметр определяет значения по умолчанию для "guard" (механизма
    | защиты) и "broker" (сброса пароля) для вашего приложения. Вы можете
    | изменить эти значения по мере необходимости, но они уже настроены для
    | большинства приложений.
    |
    */
    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),           // Guard по умолчанию (использует 'web')
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'), // Broker сброса пароля по умолчанию
    ],

    /*
    |--------------------------------------------------------------------------
    | Механизмы аутентификации (Guards)
    |--------------------------------------------------------------------------
    |
    | Здесь вы можете определить каждый механизм аутентификации для вашего
    | приложения. По умолчанию уже определена конфигурация, которая использует
    | сессии и Eloquent-провайдер пользователя.
    |
    | Каждый guard имеет user provider, который определяет, как пользователи
    | извлекаются из базы данных или другой системы хранения. Обычно используется Eloquent.
    |
    | Поддерживаемые драйверы: "session"
    |
    */
    'guards' => [
        'web' => [
            'driver' => 'session',    // Драйвер для сессий
            'provider' => 'users',    // Провайдер пользователей
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Провайдеры пользователей
    |--------------------------------------------------------------------------
    |
    | Каждый механизм аутентификации имеет user provider, который определяет, как
    | пользователи извлекаются из базы данных или другой системы хранения.
    | Обычно используется Eloquent.
    |
    | Вы можете настроить несколько провайдеров, если у вас есть несколько таблиц
    | или моделей пользователей. Эти провайдеры могут быть назначены для
    | любого дополнительного guard'а, который вы определили.
    |
    | Поддерживаемые драйверы: "database", "eloquent"
    |
    */
    'providers' => [
        'users' => [
            'driver' => 'eloquent',              // Используется драйвер Eloquent для работы с моделью
            'model' => env('AUTH_MODEL', App\Models\User::class), // Модель пользователя
        ],

        // Пример для работы с таблицей напрямую через драйвер database:
        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Сброс паролей
    |--------------------------------------------------------------------------
    |
    | Эти параметры определяют поведение функции сброса паролей в Laravel, включая
    | таблицу, используемую для хранения токенов сброса, и провайдер пользователей,
    | который используется для получения данных пользователя.
    |
    | Время истечения указывает, сколько минут будет действителен токен сброса.
    | Этот параметр позволяет сделать токены короткоживущими для повышения безопасности.
    |
    | Настройка throttle указывает количество секунд, которые пользователь должен
    | подождать перед созданием нового токена сброса пароля.
    |
    */
    'passwords' => [
        'users' => [
            'provider' => 'users',  // Провайдер пользователей для сброса пароля
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'), // Таблица для токенов сброса паролей
            'expire' => 60,        // Время истечения токена (в минутах)
            'throttle' => 60,      // Время ожидания перед генерацией нового токена (в секундах)
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Тайм-аут подтверждения пароля
    |--------------------------------------------------------------------------
    |
    | Здесь вы можете определить количество секунд, после которых пользователю
    | нужно будет снова ввести пароль на экране подтверждения пароля.
    | По умолчанию тайм-аут составляет три часа (10800 секунд).
    |
    */
    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800), // Тайм-аут для подтверждения пароля (3 часа)

];
